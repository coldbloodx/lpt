#!/usr/bin/env python

import sys

from app import LAApp
from dbitem import *
from dbman import ConnManager as DBConnManager

class GetID(LAApp):
    def __init__(self):
        LAApp.__init__(self,debug=False)

    def parseargs(self):
        """parseargs - Parse the command line arguments and populate the
        class variables"""
        self.force_single_instance()

        self.parser.add_option("-v", "--version", action="callback",
                callback=self.showversion, help="version")
        self.parser.add_option("-g", "--ngname", action="store", 
                dest="ngname", help="get nodegroup id", metavar="nodegroup")
        self.parser.add_option("-n", "--nodename", action="store", 
                dest="node", help="get node id", metavar="node")
        self.parser.add_option("-p", "--partschema", action="store",
                dest="schema", help="get partition schema id", metavar="schema")
        self.parser.add_option("--network", action="store",
                dest="net", help="get network id", metavar="network")

        if len(sys.argv[1:]) < 1:
            self.parser.print_help()
            sys.exit(0)

        (self.options, self.args) = self.parser.parse_args(sys.argv[1:])
       
        count = 0
        for option in [bool(self.options.ngname), bool(self.options.node), 
                bool(self.options.schema), bool(self.options.net)]:
            if option:
                count = count + 1
            if count > 1:
                self.stderrmsg("only one option is allowed for this tool\n")
                sys.exit(-1)

    def run(self):
        self.parseargs()

        dbconn = DBConnManager.get_session()

        if self.options.ngname:
            nodegroup =  dbconn.query(NodeGroup).filter_by(ngname=self.options.ngname).first()
            if not nodegroup:
                sys.exit(-1)

            print nodegroup.ngid
            
        elif self.options.node:
            node = dbconn.query(Node).filter_by(nodename=self.options.node).first()
            if not node:
                sys.exit(-1)

            print node.nid

        elif self.options.schema:
            schema = dbconn.query(PartSchema).filter_by(schemaname=self.options.schema).first()
            if not schema:
                sys.exit(-1)

            print schema.schemaid

        elif self.options.net:
            network = dbconn.query(Network).filter_by(netname=self.options.net).first()
            if not network:
                sys.exit(-1)

            print network.netid

        sys.exit(0)

    
if __name__ == '__main__':
    getidapp = GetID()
    getidapp.run()
