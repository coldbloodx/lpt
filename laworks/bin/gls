#!/usr/bin/env python

import sys

from dbitem import *
from utils import errout
from app import LAApp
from dbman  import ConnManager as DBConnManager

class LAGlobalLsApp(LAApp):
    def __init__(self):
        LAApp.__init__(self, debug=False)
        self.force_single_instance()
        self.cols = []
        self.vcols = [ 'key', 'value', 'extra' ]
    
    def parse_args(self):

        self.parser.add_option("-v", "--version", action="callback",
                callback=self.showversion, help="version")

        self.parser.add_option("-c", "--column", action="store", dest="colstr", 
                help="column string, such like col1,col2", metavar="colname")
        self.parser.add_option("-k", "--keyname", action="store", dest="keyname", 
                help="key name", metavar="keyname")
        self.parser.add_option("--valueonly", action="store_true", dest="valueonly",
                help="show values only")

        (self.options, self.args) = self.parser.parse_args(sys.argv[1:])

    def run(self):
        self.parse_args()

        cols = []
        if self.options.colstr:
            cols = self.options.colstr.split(',')

        for col in cols:
            if col not in self.vcols:
                errout("Specified column: %s is not a valid column for global" % (col))
                sys.exit(1)
        
        self.cols = cols

        dbconn = DBConnManager.get_session()
        allglobals= dbconn.query(Global).all()
        
        gbls = allglobals
        if self.options.keyname:
            gbls = [ gbl for gbl in allglobals if gbl.key == self.options.keyname ]
            if not gbls:
                errout("Can not find specified global object")
                sys.exit(1)

        kvmaps = {}
        for gbl in gbls :
            kvmap = {
                "key"  : gbl.key,
                "value": gbl.value,
                "extra": gbl.extra
                }
            kvmaps[gbl.key] = kvmap
        
        cols = self.vcols
        if self.cols:
            cols = self.cols
        
        for gbl in gbls:
            for col in cols:
                if self.options.valueonly:
                    print kvmaps[gbl.key][col]
                else:
                    print "%-8s : %s" % (col, kvmaps[gbl.key][col])
            if not self.options.valueonly: print 

if __name__ == '__main__':
    glsapp = LAGlobalLsApp()
    glsapp.run()
