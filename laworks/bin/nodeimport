#!/usr/bin/env python

import sys

from unipath.path import Path as path

from dbitem import *
from dbhelper import *
from constant import *
from nodeoperation import *
from app import LAApp
from dbman  import ConnManager as DBConnManager

class LANodeImportApp(LAApp):
    def __init__(self):
        LAApp.__init__(self, debug=False)
        self.force_single_instance()

    def parseargs(self):

        self.parser.add_option("-v", "--version", action="callback",
                callback=self.showversion, help="version")
        self.parser.add_option("-g", "--ngname", action="store", 
                dest="ngname", help="nodegroup name", metavar="nodegroup")
        #self.parser.add_option("-i", "--interface", action="store", 
        #        dest="iface", help="interface name", metavar="interface")
        self.parser.add_option("-m", "--mac", action="store", 
                dest="mac", help="mac address of boot nic on compute node", metavar="mac")

        if len(sys.argv[1:]) < 1:
            self.parser.print_help()
            sys.exit(0)

        (self.options, self.args) = self.parser.parse_args(sys.argv[1:])

    def run(self):
        self.parseargs()

        for opt in [bool(self.options.ngname), #bool(self.options.iface), 
                bool(self.options.mac)]:
            if not opt:
                self.parser.print_help()
                sys.exit(-1)

        dbconn = DBConnManager.get_session()
        (ret, why) = importnode(dbconn, self.options.mac, self.options.ngname)

        if not ret:
            self.stderrmsg(why)
            sys.exit(-1)

        sys.exit(0)

if __name__ == '__main__':
    nodeimportapp = LANodeImportApp()
    nodeimportapp.run()
