#!/usr/bin/env python

import sys

from dbitem import *
from utils import errout
from app import LAApp
from dbman  import ConnManager as DBConnManager

class LANodeGroupLsApp(LAApp):
    def __init__(self):
        LAApp.__init__(self, debug=False)
        self.force_single_instance()
        self.cols = []
        self.vcols = [ 'ngid', 'ngname', 'provtype', 'uitype', 'distro', 'os' ]
    
    def parse_args(self):

        self.parser.add_option("-v", "--version", action="callback",
                callback=self.showversion, help="version")

        self.parser.add_option("-c", "--column", action="store", dest="colstr", 
                help="column string, such like col1,col2", metavar="colname")
        self.parser.add_option("-g", "--ngname", action="store", dest="ngname", 
                help="nodegroup name", metavar="nodegroup")
        self.parser.add_option("--valueonly", action="store_true", dest="valueonly",
                help="show values only")

        (self.options, self.args) = self.parser.parse_args(sys.argv[1:])

    def run(self):
        self.parse_args()

        cols = []
        if self.options.colstr:
            cols = self.options.colstr.split(',')

        for col in cols:
            if col not in self.vcols:
                errout("Specified column: %s is not a valid column for node group" % (col))
                sys.exit(1)
        
        self.cols = cols

        dbconn = DBConnManager.get_session()
        allngs = dbconn.query(NodeGroup).all()
        
        ngs = allngs
        if self.options.ngname:
            ngs = [ ng for ng in allngs if ng.ngname == self.options.ngname ]
            if not ngs:
                errout("Can not find specified node group")
                sys.exit(1)

        kvmaps = {}
        for ng in ngs:
            kvmap = {
                "ngid"     : ng.ngid,
                "ngname"   : ng.ngname,
                "provtype" : ng.provtype,
                "uitype"   : ng.uitype,
                "distro"   : ng.os.osname,
                "os"       : "%s, %s.%s.%s" % (ng.os.osid, ng.os.osname, ng.os.major, ng.os.minor)
                }
            kvmaps[ng.ngname] = kvmap
        
        cols = self.vcols
        if self.cols:
            cols = self.cols
        
        for ng in ngs:
            for col in cols:
                if self.options.valueonly:
                    print kvmaps[ng.ngname][col]
                else:
                    print "%-8s : %s" % (col, kvmaps[ng.ngname][col])
            if not self.options.valueonly: print 

if __name__ == '__main__':
    nglsapp = LANodeGroupLsApp()
    nglsapp.run()
